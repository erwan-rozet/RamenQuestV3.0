.container {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

/* 
.container+.container {
  margin-top: 10px;
} */

.control,
.controlError {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.label {
  color: var(--color-text);
  font-weight: 500;
  font-size: 14px;
}

.textarea {
  resize: vertical;
  min-height: 100px;
  padding: 8px;
  font-size: 14px;
  background-color: var(--color-light-grey);
  border-radius: var(--radius-medium);
  padding: 10px 12px;
  border: var(--border);
  box-shadow: var(--shadow);
  transition: all 0.2s ease;
  color: var(--color-text);
}

.input {
  background-color: var(--color-light-grey);
  border-radius: var(--radius-medium);
  padding: 10px 12px;
  border: var(--border);
  box-shadow: var(--shadow);
  transition: all 0.2s ease;
  color: var(--color-text);
}

.input[disabled],
.input[disabled="disabled"],
.input.disabled {
  background-color: var(--color-border-light);
  opacity: 0.9;
}

.input::placeholder {
  color: var(--color-text-muted);
}

.input:not([disabled]):not([disabled="disabled"]):not(.disabled):hover {
  border-color: var(--color-border-darker);
}

.input:focus {
  border-color: var(--color-primary);
  outline: none;
  box-shadow: 0 0 0 2px rgba(var(--color-primary-rgb), 0.5);
}

.errorDetails {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 2px;
  font-size: 12px;
  color: var(--color-danger);
  text-align: right;
}

.controlError .label {
  color: var(--color-danger);
}

.controlError .input {
  border-color: var(--color-danger);
}

.controlError .input:focus {
  box-shadow: 0 0 0 2px rgba(var(--color-danger-rgb), 0.3);
}
