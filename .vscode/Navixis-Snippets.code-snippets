{
  // Place your navixis workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "New component": {
    "scope": "javascript,typescript,typescriptreact",
    "prefix": "cmp",
    "body": [
      "",
      "const ${1:}: React.FC = () => {",
      "return <div></div>",
      "}",
      "",
      "export default ${1:}"
    ],
    "description": "Insert a new component"
  },

  // "New component": {
  //   "scope": "javascript,typescript,typescriptreact",
  //   "prefix": "cmpt",
  //   "body": [
  //     "import { useTranslation } from 'next-i18next'",
  //     "import { useMutation, useQuery, useQueryClient } from 'react-query'",
  //     "import { useState } from 'react'",
  //     "",
  //     "const MyComponent$1: React.FC = () => {",
  //     "return <div></div>",
  //     "}",
  //     "",
  //     "export default MyComponent$2"
  //   ],
  //   "description": "Insert a new component"
  // },

  "React Arrow Function Component": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "tsafce",
    "body": [
      "import React from 'react';",
      "",
      "const ${1:ComponentName}: React.FC = (${2:props}) => {",
      "  return (",
      "    <div>",
      "      // Your JSX content here",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ${1:ComponentName};"
    ],
    "description": "Create a TypeScript React arrow function component"
  },

  "debug console.log": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "clgd",
    "body": [
      "console.log('${1:}_____')",
      "console.log(${1:})",
      "console.log('${1:}_____')"
    ],
    "description": "Log output to console"
  },
  " console.log": {
    "scope": "javascript,typescript, typescriptreact",
    "prefix": "clg",
    "body": ["console.log(`${1:}_____`, ${1:})"],
    "description": "Log output to console"
  }
}
